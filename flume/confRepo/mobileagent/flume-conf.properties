# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# The configuration file needs to define the sources, 
# the channels and the sinks.
# Sources, channels and sinks are defined per agent, 
# in this case called 'agent'

agent.sources = originallog formatlogmeasurementdata formatloghttpdata formatlogsessiondata formatloghttperrortrace formatlogactivitytrace formatlogcrashtrace
agent.channels = memoryFileChannel
agent.sinks = avroSink1 avroSink2

# Interceptors
agent.sources.originallog.interceptors = topicinterceptor  kafkainterceptor
agent.sources.originallog.interceptors.topicinterceptor.type = static
agent.sources.originallog.interceptors.topicinterceptor.key = topic
agent.sources.originallog.interceptors.topicinterceptor.value = mobile-originallog
agent.sources.originallog.interceptors.kafkainterceptor.type = static
agent.sources.originallog.interceptors.kafkainterceptor.key = kfk
agent.sources.originallog.interceptors.kafkainterceptor.value = true
agent.sources.originallog.type = exec
agent.sources.originallog.command = tail -F /oneapm/log/tomcat/data/das-data.log

agent.sources.formatlogmeasurementdata.interceptors = topicinterceptor
agent.sources.formatlogmeasurementdata.interceptors.topicinterceptor.type = static
agent.sources.formatlogmeasurementdata.interceptors.topicinterceptor.key = topic
agent.sources.formatlogmeasurementdata.interceptors.topicinterceptor.value = mobile-formatlog-measurement
agent.sources.formatlogmeasurementdata.type = exec
agent.sources.formatlogmeasurementdata.command = tail -F /oneapm/log/tomcat/data/das-measurement-data.log

agent.sources.formatloghttpdata.interceptors = topicinterceptor
agent.sources.formatloghttpdata.interceptors.topicinterceptor.type = static
agent.sources.formatloghttpdata.interceptors.topicinterceptor.key = topic
agent.sources.formatloghttpdata.interceptors.topicinterceptor.value = mobile-formatlog-http
agent.sources.formatloghttpdata.type = exec
agent.sources.formatloghttpdata.command = tail -F /oneapm/log/tomcat/data/das-http-data.log

agent.sources.formatlogsessiondata.interceptors = topicinterceptor
agent.sources.formatlogsessiondata.interceptors.topicinterceptor.type = static
agent.sources.formatlogsessiondata.interceptors.topicinterceptor.key = topic
agent.sources.formatlogsessiondata.interceptors.topicinterceptor.value = mobile-formatlog-session
agent.sources.formatlogsessiondata.type = exec
agent.sources.formatlogsessiondata.command = tail -F /oneapm/log/tomcat/data/das-session-data.log


agent.sources.formatloghttperrortrace.interceptors = topicinterceptor
agent.sources.formatloghttperrortrace.interceptors.topicinterceptor.type = static
agent.sources.formatloghttperrortrace.interceptors.topicinterceptor.key = topic
agent.sources.formatloghttperrortrace.interceptors.topicinterceptor.value = mobile-formatlog-httperrortrace
agent.sources.formatloghttperrortrace.type = exec
agent.sources.formatloghttperrortrace.command = tail -F /oneapm/log/tomcat/data/das-httperrortrace-data.log

agent.sources.formatlogactivitytrace.interceptors = topicinterceptor
agent.sources.formatlogactivitytrace.interceptors.topicinterceptor.type = static
agent.sources.formatlogactivitytrace.interceptors.topicinterceptor.key = topic
agent.sources.formatlogactivitytrace.interceptors.topicinterceptor.value = mobile-formatlog-activitytrace
agent.sources.formatlogactivitytrace.type = exec
agent.sources.formatlogactivitytrace.command = tail -F /oneapm/log/tomcat/data/das-activitytrace-data.log

agent.sources.formatlogcrashtrace.interceptors = topicinterceptor
agent.sources.formatlogcrashtrace.interceptors.topicinterceptor.type = static
agent.sources.formatlogcrashtrace.interceptors.topicinterceptor.key = topic
agent.sources.formatlogcrashtrace.interceptors.topicinterceptor.value = mobile-formatlog-crashtrace
agent.sources.formatlogcrashtrace.type = exec
agent.sources.formatlogcrashtrace.command = tail -F /oneapm/log/tomcat/data/das-crashtrace-data.log


# The channel can be defined as follows.
agent.sources.originallog.channels = memoryFileChannel
agent.sources.formatlogmeasurementdata.channels = memoryFileChannel
agent.sources.formatloghttpdata.channels = memoryFileChannel
agent.sources.formatlogsessiondata.channels = memoryFileChannel
agent.sources.formatloghttperrortrace.channels = memoryFileChannel
agent.sources.formatlogactivitytrace.channels = memoryFileChannel
agent.sources.formatlogcrashtrace.channels = memoryFileChannel

# Each sink's type must be defined
agent.sinks.avroSink1.type = avro
agent.sinks.avroSink1.hostname = 10.251.93.217
agent.sinks.avroSink1.port = 10001

agent.sinks.avroSink2.type = avro
agent.sinks.avroSink2.hostname = 10.251.49.226
agent.sinks.avroSink2.port = 10001

agent.sinkgroups = sinkGroups
agent.sinkgroups.sinkGroups.sinks = avroSink1 avroSink2
agent.sinkgroups.sinkGroups.processor.type = load_balance
agent.sinkgroups.sinkGroups.processor.backoff = true
agent.sinkgroups.sinkGroups.processor.selector = random

#Specify the channel the sink should use
agent.sinks.avroSink1.channel = memoryFileChannel
agent.sinks.avroSink2.channel = memoryFileChannel

# Each channel's type is defined.
agent.channels.memoryFileChannel.type = SPILLABLEMEMORY

# Other config values specific to each type of channel(sink or source)
# can be defined as well
# In this case, it specifies the capacity of the memory channel
agent.channels.memoryFileChannel.capacity = 1000
agent.channels.memoryFileChannel.overflowCapacity = 100000000
agent.channels.memoryFileChannel.checkpointDir = ${FLUME_HOME}/data/channel/checkpoint
agent.channels.memoryFileChannel.dataDirs = ${FLUME_HOME}/data/channel/data
